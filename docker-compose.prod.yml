services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: always
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - CLOUDPAYMENTS_API_SECRET=${CLOUDPAYMENTS_API_SECRET}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${PUBLIC_DOMAIN}`) && PathPrefix(`/`)'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.tls.certresolver=le'
      - 'traefik.http.services.api.loadbalancer.server.port=3000'
    depends_on:
      - redis
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://api:3000/ping']
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 5s

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_WEBHOOK_URL=${TELEGRAM_WEBHOOK_URL}
      - TELEGRAM_STEPS_EXPIRE=${TELEGRAM_STEPS_EXPIRE:-3600}
      - PUBLIC_DOMAIN=${PUBLIC_DOMAIN:-example.com}
      - CLOUDPAYMENTS_PUBLIC_ID=${CLOUDPAYMENTS_PUBLIC_ID}
      - CLOUDPAYMENTS_API_SECRET=${CLOUDPAYMENTS_API_SECRET}
      - SHOP_INN=${SHOP_INN}
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']

  minio:
    image: minio/minio:RELEASE.2023-05-04T21-44-30Z
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.minio.rule=Host(`${PUBLIC_DOMAIN}`) && PathPrefix(`/media`)'
      - 'traefik.http.routers.minio.entrypoints=websecure'
      - 'traefik.http.routers.minio.tls.certresolver=le'
      - 'traefik.http.services.minio.loadbalancer.server.port=9000'
      - 'traefik.http.middlewares.minio-strip.stripprefix.prefixes=/media'
      - 'traefik.http.routers.minio.middlewares=minio-strip'

volumes:
  postgres-data:
  redis-data:
  minio_data:
